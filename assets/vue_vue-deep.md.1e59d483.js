import{_ as s,h as n,o as l,c,k as e,t as d,n as r,X as u}from"./chunks/framework.af6290ec.js";const p="_button_a3kf5_2",i={button:p},_=u('<h1 id="样式穿透" tabindex="-1">样式穿透 <a class="header-anchor" href="#样式穿透" aria-label="Permalink to &quot;样式穿透&quot;">​</a></h1><h2 id="理解-scoped-原理" tabindex="-1">理解 scoped 原理 <a class="header-anchor" href="#理解-scoped-原理" aria-label="Permalink to &quot;理解 scoped 原理&quot;">​</a></h2><blockquote><p>1.当你想私有当前组件的样式，vue 组件中可以使用 scoped 属性，scoped 底层是通过在 DOM 节点中添加 data-v-xxx，CSS 中通过添加[data-v-xxx]属性过滤，提高优先级，来实现样式的私有化；</p><p>2.当前组件使用了 scoped 时，会在当前 vue 组件的根元素 和 子孙组件的根元素 和当前 vue 组件的 html 标签上 加上 data-v-xxx 属性。</p></blockquote><h2 id="何时使用样式穿透-deep" tabindex="-1">何时使用样式穿透 deep <a class="header-anchor" href="#何时使用样式穿透-deep" aria-label="Permalink to &quot;何时使用样式穿透 deep&quot;">​</a></h2><blockquote><p>1.当你想修改一个组件内部的元素样式，但是该元素并不是当前 vue 组件的根元素， 也不是当前 vue 组件的子孙组件的根元素，也不是当前 vue 组件的 html 标签时就要使用样式穿透；</p><p>2.一般来说要想修改当前 vue 组件引用的组件的内部样式，我们就使用样式穿透，这样可以让别人快速知道当前的这个类名或者其他的 css 选择器是属于当前引用的这个组件的。</p></blockquote><h2 id="markdown-content" tabindex="-1">Markdown Content <a class="header-anchor" href="#markdown-content" aria-label="Permalink to &quot;Markdown Content&quot;">​</a></h2>',6),f=JSON.parse('{"title":"样式穿透","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue-deep.md","filePath":"vue/vue-deep.md"}'),h={name:"vue/vue-deep.md"},v=Object.assign(h,{setup(b){const t=n(0);return(o,a)=>(l(),c("div",null,[_,e("p",null,"The count is: "+d(t.value),1),e("p",null,[e("button",{class:r(o.$style.button),onClick:a[0]||(a[0]=k=>t.value++)},"Increment",2)])]))}}),m={$style:i},q=s(v,[["__cssModules",m]]);export{f as __pageData,q as default};
